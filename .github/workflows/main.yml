name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      ecr_repo: ${{ steps.set_ecr.outputs.repository }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set ECR repository output
        id: set_ecr
        run: |
          repository="042704722049.dkr.ecr.us-east-1.amazonaws.com/sagu-api"
          echo "repository=${repository}" >> $GITHUB_OUTPUT
          echo "ECR Repository: ${repository}"

  build:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.23.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Build and verify Docker image
        run: |
          docker-compose -f docker-compose.yml build
          docker tag sagu-api-web:latest ${{ needs.setup.outputs.ecr_repo }}:latest
          echo "Image successfully tagged:"
          docker images | grep "${{ needs.setup.outputs.ecr_repo }}"

  deploy:
  needs: build
  runs-on: ubuntu-latest
  steps:
    - name: Configure AWS CLI
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Verify ECR repository
      run: |
        echo "ECR Repository: ${{ needs.setup.outputs.ecr_repo }}"
        [ -z "${{ needs.setup.outputs.ecr_repo }}" ] && { echo "Error: ECR repository is empty"; exit 1; } || true

    - name: Login to Amazon ECR
      run: |
        aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 042704722049.dkr.ecr.us-east-1.amazonaws.com

    - name: Push Docker image to ECR
      run: |
        echo "Pushing image to: ${{ needs.setup.outputs.ecr_repo }}:latest"
        docker push "${{ needs.setup.outputs.ecr_repo }}:latest"

  test_ssh:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Test SSH connection
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          port: 22
          script: |
            echo "âœ… SSH Connection Successful"
            echo "Current directory: $(pwd)"
            ls -la /home/ubuntu/sagu-api/docker-compose.yml
            uptime

  deploy_to_ec2:
    needs: test_ssh
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          port: 22
          script: |
            echo "ðŸš€ Starting deployment..."
            cd /home/ubuntu/sagu-api
            aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 042704722049.dkr.ecr.us-east-1.amazonaws.com
            docker pull 042704722049.dkr.ecr.us-east-1.amazonaws.com/sagu-api:latest
            docker-compose down
            docker-compose up --pull always --force-recreate --detach
            echo "ðŸŽ‰ Deployment completed!"
            echo "Running containers:"
            docker ps
