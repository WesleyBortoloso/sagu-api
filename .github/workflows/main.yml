name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 042704722049.dkr.ecr.us-east-1.amazonaws.com

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker compose --version

      - name: SSH into EC2 and Build Docker images
        uses: appleboy/ssh-action@v0.1.0
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          port: 22
          script: |
            echo "Conectando ao EC2..."
            cd /home/ubuntu/sagu-api  # Caminho onde o código está
            git pull origin master  # Puxa as últimas mudanças
            echo "Arquivo .env encontrado, pronto para build!"
            echo "Iniciando o build das imagens..."
            docker compose --env-file .env build  # Usa o .env do EC2
            docker compose push  # Envia as imagens para o ECR

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: SSH into EC2 and Deploy application
        uses: appleboy/ssh-action@v0.1.0
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          port: 22
          script: |
            echo "Indo para a pasta da aplicação..."
            cd /home/ubuntu/sagu-api || { echo "Falha ao acessar o diretório"; exit 1; }
            echo "Atualizando containers com a nova imagem..."
            docker pull 042704722049.dkr.ecr.us-east-1.amazonaws.com/sagu-api:latest
            docker compose pull  # Atualiza o nginx se necessário
            docker compose up -d  # Levanta a API e o nginx
            echo "Deploy finalizado!"
